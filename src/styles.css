/* You can add global styles to this file, and also import other style files */
*{
    margin: 0;
    padding: 0;
    /* font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif; */
    font-family: 'Poppins';


}


/* .login-container input.ng-invalid.ng-touched {
    border-color: red;
  }
    background-color: #f5f5f5;

  
  .login-container input.ng-valid.ng-touched {
    border-color: green;
  } */


   /* @HostListener('document:click', ['$event']) onDocumentClick(event){
      this.isVisible = false;
     }
  
    onClickOutside(event: MouseEvent) {
       const clickedInside = event.target instanceof HTMLElement && event.target.closest('.hidden-div, .icon');
      
      if (!clickedInside) {
        this.isVisible = false;
      }


      
  } */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }






/* 
// const fieldOneValue = this.RoomForm.get('country')?.value;
// const fieldTwoValue = this.RoomForm.get('facility')?.value;
// const fieldThreeValue = this.RoomForm.get('floorLevel')?.value;
// const mergedValue = `${fieldOneValue}_${fieldTwoValue}_${fieldThreeValue}`;

// this.RoomForm.get('floorName')?.setValue(mergedValue, { emitEvent: false });

combineLatest([
  this.FloorForm.get('country')!.valueChanges.pipe(startWith('')),
  this.FloorForm.get('facility')!.valueChanges.pipe(startWith('')),
  this.FloorForm.get('floorLevel')!.valueChanges.pipe(startWith(''))
]).subscribe(([country, facility, floorLevel]) => {
  if (country && facility && floorLevel) {
    const mergedValue = `${country}_${facility}_${floorLevel}`;
    this.RoomForm.get('floorName')?.setValue(mergedValue, { emitEvent: false });
  }
}); */